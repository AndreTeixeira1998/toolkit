#! /usr/bin/env bash

set -euo pipefail

RC_FILE="config/overleaf.rc"

function __main__() {
  SHARELATEX_IMAGE_VERSION="$(head -n 1 ./config/version)"
  MONGO_IMAGE="mongo:3.6"
  REDIS_IMAGE="redis:5.0"

  if [[ ! "$SHARELATEX_IMAGE_VERSION" \
          =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    echo "ERROR: invalid version '${SHARELATEX_IMAGE_VERSION}'"
    exit 1
  fi

  # Load vars from the rc file
  # shellcheck disable=SC1090
  source "$RC_FILE"

  # Select which docker-compose files to load
  compose_file_flags=("-f ./lib/docker-compose.base.yml")
  if [[ "$REDIS_ENABLED" == "true" ]]; then
    compose_file_flags+=("-f ./lib/docker-compose.redis.yml")
  fi
  if [[ "$MONGO_ENABLED" == "true" ]]; then
    compose_file_flags+=("-f ./lib/docker-compose.mongo.yml")
  fi
  if [[ "$SIBLING_CONTAINERS_ENABLED" == "true" ]]; then
    compose_file_flags+=("-f ./lib/docker-compose.sibling-containers.yml")
  fi

  # Include docker-compose.override.yml if it is present
  if [[ -f './config/docker-compose.override.yml' ]]; then
    compose_file_flags+=("-f ./config/docker-compose.override.yml")
  fi

  # Build up the flags to pass to docker-compose
  project_name="${PROJECT_NAME:-overleaf}"

  image_name="sharelatex/sharelatex"
  if [[ "${SERVER_PRO:-null}" == "true" ]]; then
    image_name="quay.io/sharelatex/sharelatex-pro"
  fi

  full_image_spec="$image_name:$SHARELATEX_IMAGE_VERSION"

  # Canonicalize data paths
  SHARELATEX_DATA_PATH=$(cd config; realpath "$SHARELATEX_DATA_PATH")
  MONGO_DATA_PATH=$(cd config; realpath "$MONGO_DATA_PATH")
  REDIS_DATA_PATH=$(cd config; realpath "$REDIS_DATA_PATH")

  # Print debug info
  if [[ "${RC_DEBUG:-null}" != "null" ]]; then
    echo ">>>>>>VARS>>>>>>"
    echo "$(set -o posix; set)" # print all vars
    echo "IMAGE_VERSION=$SHARELATEX_IMAGE_VERSION"
    echo "<<<<<<<<<<<<<<<<"
    echo ">>>>COMPOSE-ARGS>>>>"
    echo "-p $project_name"
    echo "${compose_file_flags[@]}"
    echo "$@"
    echo "<<<<<<<<<<<<<<<<<<<<"
  fi

  # Export vars for use in docker-compose files
  export IMAGE="$full_image_spec"
  export SHARELATEX_DATA_PATH
  export DOCKER_SOCKET_PATH
  export MONGO_IMAGE
  export MONGO_DATA_PATH
  export REDIS_IMAGE
  export REDIS_DATA_PATH

  echo ">> Running with sharelatex-image=$IMAGE"

  # shellcheck disable=SC2068
  exec docker-compose -p "$project_name" ${compose_file_flags[@]} "$@"
}

__main__ "$@"
